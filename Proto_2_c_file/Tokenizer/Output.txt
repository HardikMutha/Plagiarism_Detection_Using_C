Identifier bool
Function checkPangram(
Keyword char
Identifier str
Delimiter []
Delimiter )
SpDelim {
Identifier bool
Identifier mark
Delimiter [
Integer 26
Delimiter ]
SpDelim ;
Identifier for
Delimiter (
Keyword int
Identifier i
Assign =
Integer 0
SpDelim ;
Identifier i
Relational <
Integer 26
SpDelim ;
Identifier i
Relational ++
Delimiter )
Identifier mark
Delimiter [
Identifier i
Delimiter ]
Assign =
Identifier false
SpDelim ;
Keyword int
Identifier index
SpDelim ;
Identifier size_t
Identifier size
Assign =
Function strlen(
Identifier str
Delimiter )
SpDelim ;
Identifier for
Delimiter (
Keyword int
Identifier i
Assign =
Integer 0
SpDelim ;
Identifier i
Relational <
Identifier size
SpDelim ;
Identifier i
Relational ++
Delimiter )
SpDelim {
Keyword if
Delimiter (
Delimiter '
Identifier A
Delimiter '
Relational <=
Identifier str
Delimiter [
Identifier i
Delimiter ]
Logical &&
Identifier str
Delimiter [
Identifier i
Delimiter ]
Relational <=
Delimiter '
Identifier Z
Delimiter '
Delimiter )
Identifier index
Assign =
Identifier str
Delimiter [
Identifier i
Delimiter ]
Arithmatic -
Delimiter '
Identifier A
Delimiter '
SpDelim ;
Keyword else
Keyword if
Delimiter (
Delimiter '
Identifier a
Delimiter '
Relational <=
Identifier str
Delimiter [
Identifier i
Delimiter ]
Logical &&
Identifier str
Delimiter [
Identifier i
Delimiter ]
Relational <=
Delimiter '
Identifier z
Delimiter '
Delimiter )
Identifier index
Assign =
Identifier str
Delimiter [
Identifier i
Delimiter ]
Arithmatic -
Delimiter '
Identifier a
Delimiter '
SpDelim ;
Keyword else
Keyword continue
SpDelim ;
Identifier mark
Delimiter [
Identifier index
Delimiter ]
Assign =
Identifier true
SpDelim ;
SpDelim }
Identifier for
Delimiter (
Keyword int
Identifier i
Assign =
Integer 0
SpDelim ;
Identifier i
Relational <=
Integer 25
SpDelim ;
Identifier i
Relational ++
Delimiter )
Keyword if
Delimiter (
Identifier mark
Delimiter [
Identifier i
Delimiter ]
Relational ==
Identifier false
Delimiter )
Keyword return
Delimiter (
Identifier false
Delimiter )
SpDelim ;
Keyword return
Delimiter (
Identifier true
Delimiter )
SpDelim ;
SpDelim }
Keyword int
Function main(
Delimiter )
SpDelim {
Keyword char
Identifier str
Delimiter []
Assign =
String "The quick brown fox jumps over the lazy dog"
SpDelim ;
Keyword if
Delimiter (
Function checkPangram(
Identifier str
Delimiter )
Relational ==
Identifier true
Delimiter )
Function printf(
SpecialCharacters %
Identifier s
Identifier is
Identifier a
Identifier pangram
Delimiter ,
Identifier str
Delimiter )
SpDelim ;
Keyword else
Function printf(
SpecialCharacters %
Identifier s
Identifier is
Identifier not
Identifier a
Identifier pangram
Delimiter ,
Identifier str
Delimiter )
SpDelim ;
Keyword return
Delimiter (
Integer 0
Delimiter )
SpDelim ;
SpDelim }





 Total Tokens = 213