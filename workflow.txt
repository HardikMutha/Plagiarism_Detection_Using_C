for txt file 
->  gcc main.c PDF_Parser/pdf_parser.c pkg-config --cflags --libs poppler-glib -Wall 
for pdf file 
-> gcc flex_script.c -Wall
-> ./a.out lexical_analyzer_copy.l input.txt
-> gcc insertintoListUpdated.c SLL/sll.c DLL/dll.c -Wall
-> ./a.out Output.txtÂ Output2.txt


***
# compiler
CC = gcc

# compiler flags
CFLAGS = -Wall

# source files
SRCS1 = Proto_1_txt_file/main.
SRCS2 = PDF_Parser/pdf_parser.c
SRCS3 = Proto_2_c_file/Tokenizer/flex_script.c
SRCS4 = Proto_2_c_file/Tokenizer/insertintoListUpdated.c

# target files
TARGET1 = main
TARGET2 = 


# without generating object files
build:
    $(CC) $(CFLAGS) $(SRCS1) $(SRCS2) $(SRCS3) $(SRCS4) -o $(TARGET1) $(TARGET2)


# txt and pdf files
SRCS1 + HLP1 + CFLAGS + CFLAGS2 => TARGET1
$(TARGET1) $(FILE1) $(FILE2) => output

# c files
SRCS2 + CFLAGS => TARGET2
TARGET2 + HLP2 + FILE1 -> O1 (output.txt)
# rename
mv output.txt O1
TARGET2 + HLP2 + FILE2 -> O2 (output.txt)
# rename
mv output.txt O2
SRCS3 + HLP3 + HLP4 + CFLAGS => TARGET3
TARGET3 + O1 + O2 => output
